import Dexie, { type Table } from 'dexie';
import dexieCloud, { type DexieCloudTable } from 'dexie-cloud-addon';
import { populate } from './populate';

import { TodoList } from './TodoList';

const dexieCloudDbUrl = import.meta.env?.VITE_PUBLIC_DEXIE_CLOUD_DBURL || '';

export class TodoDB extends Dexie {
	// Table accessors are auto-generated by Dexie (from schema below)
	todoLists!: DexieCloudTable<TodoList, 'id'>;
	openCloseStates!: Table<boolean, [string, string]>;

	constructor() {
		super('TodoDBCloud2', {
			addons: [dexieCloud],
			cache: "immutable"
		});
		this.version(14).stores({
			todoLists: `@id`,
			openCloseStates: `` // Set of open ids (persisted local state only)
		});

		this.todoLists.mapToClass(TodoList);

		this.on('populate', () => {
			this.on('ready', () => {
				return populate(this);
			});
		});
		// Configure cloud:
		this.cloud.configure({
			unsyncedTables: ['openCloseStates'],
			databaseUrl: dexieCloudDbUrl,
			tryUseServiceWorker: true, // true!
			requireAuth: false,
		});
	}
}
